/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Gamanza REST recommendation engine API specification
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gamanza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { handleRequest, ApiRequestContext } from "@gamingenius/lib_rest_api";
import { Router } from "express-serve-static-core";
import { RecommendedResponseList } from "../models";

/**
 * Binds the implementation class with the given basePath to the Express restRouter.
 */
export function registerRecommendedApiResource(
  basePath: string,
  restRouter: Router,
  impl: RecommendedApi | null
): void {
  if (impl === null) {
    return;
  }

  restRouter.get(
    basePath + "/recommendation/api/v1/recommended",
    // eslint-disable-next-line @typescript-eslint/no-misused-promises
    handleRequest(impl.getRecommendedGames, [], [], 201)
  );
  restRouter.get(
    basePath + "/recommendation/api/v1/recommended/{playerId}".replace("{" + "playerId" + "}", ":playerId"),
    // eslint-disable-next-line @typescript-eslint/no-misused-promises
    handleRequest(impl.getUserRecommendedGames, [], [], 201)
  );
}

/**
 * RecommendedApi - interface
 *
 * @export
 * @interface RecommendedApi
 */
export interface RecommendedApi {
  /**
   * Returns globally recommended objects.
   * GET /recommendation/api/v1/recommendation/api/v1/recommended
   *
   * @summary Get globally / public recommended objects
   * @param { ApiRequestContext } context
   * @param { pageSize?: number,  } request
   * @throws { ApiFault }
   */
  getRecommendedGames(context: ApiRequestContext, request: { pageSize?: number }): Promise<RecommendedResponseList>;

  /**
   * Returns recommended objects.
   * GET /recommendation/api/v1/recommendation/api/v1/recommended/{playerId}
   *
   * @summary Get recommended objects
   * @param { ApiRequestContext } context
   * @param { playerId: string, pageSize?: number,  } request
   * @throws { ApiFault }
   */
  getUserRecommendedGames(
    context: ApiRequestContext,
    request: { playerId: string; pageSize?: number }
  ): Promise<RecommendedResponseList>;
}
