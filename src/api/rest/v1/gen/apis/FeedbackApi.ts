/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Gamanza REST recommendation engine API specification
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gamanza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



import { handleRequest, ApiRequestContext } from "@gamingenius/lib_rest_api";
import { Router } from "express-serve-static-core";
import { FeedbackCreate } from "../models";


/**
 * Binds the implementation class with the given basePath to the Express restRouter.
 */
export function registerFeedbackApiResource(basePath: string, restRouter: Router, impl: FeedbackApi | null): void {
  if (impl === null) {
    return;
  }

  restRouter.post(
    basePath + "/recommendation/api/v1/feedback",
    // eslint-disable-next-line @typescript-eslint/no-misused-promises
    handleRequest(impl.createFeedback, [], [], 201, "feedbackCreate")
  );
}

/**
 * FeedbackApi - interface
 *
 * @export
 * @interface FeedbackApi
 */
export interface FeedbackApi {

  /**
   * Creates new recommendation feedback object with respected data in body payload.
   * POST /recommendation/api/v1/recommendation/api/v1/feedback
   *
   * @summary Create new recommendation feedback object
   * @param { ApiRequestContext } context
   * @param { feedbackCreate: FeedbackCreate,  } request
   * @throws { ApiFault }
   */
  createFeedback(context: ApiRequestContext, request: { feedbackCreate: FeedbackCreate,  }): Promise<void>;
}
